(function() {

  managerHost = '<%= manager_host %>';

  // submits the signup form by doing a CORS request to the manager's signup API
  function submitSignupFormwithCORS(form) {
    removeAllErrorsFromForm(form);

    $.ajax({
      type: 'POST',
      url:  (managerHost+'/api/users'),
      data: $(form).serializeArray(),
      success: function(data, textStatus, xhr) {
        signInUser(data);
      },
      error: function(xhr, textStatus, errorText) {
        if (xhr.status == 422) {
          var data = $.parseJSON(xhr.responseText);
          addErrorsToForm(form, data['errors']);
        } else {
          notifyUserAboutError(errorText);
        }
      }
    });
  }

  function signInUser(userData) {
    window.location.href = managerHost+'/?user_email='+userData['email']+'&user_token='+userData['authentication_token'];
  }

  function removeAllErrorsFromForm(form) {
    $(form).find('small.error').remove();
  }

  function addErrorsToForm(form, errors) {
    for(fieldWithError in errors) {
      var errorEl = $('<small class="error">'+errors[fieldWithError]+'</small>');
      form.find('input[name="user['+fieldWithError+']"]').after(errorEl);
    }
  }

  function notifyUserAboutError(errorText) {
    alert('An error occured. Please try again or contact support@shortcutmedia.com if the problem persists.');
    console.log(errorText);
  }

  // Installs a submit handler that connects the signup form to the manager signup API via CORS if CORS is available.
  //
  // If CORS is not available, the signup form is submitted to the normal manager signup action which takes over the
  // rest of the setup process (handling validation errors etc.).
  function initCORSSignupFormHandler() {
    if ($.support.cors) {
      $('.signup-form').not('.signup-handler-registered').addClass('signup-handler-registered').submit(function(e) {
        e.preventDefault();
        if ($(this).valid()) submitSignupFormwithCORS($(this));
      });
    }
  }

  // Selects the medium type specified in the anchor part of the current url as the medium type the new user is interested
  // in if possible.
  function initMediumTypeFromAnchor() {
    var mediumType = window.location.hash.substring(1);
    $('select[name="user[favorite_medium_type]"]').val(mediumType);
  }

  function setSelectClass(element) {
    if($(element).val() == "") $(element).addClass("empty");
    else $(element).removeClass("empty");
  }

  // Sets the select boxes' class correctly and installs a handler that keeps it consistent. select boxes have the class
  // empty if nothing is selected...
  function initPlaceholderForSelectElement() {
    $(".signup-form select").each(function () {
      setSelectClass($(this));
      $(this).change(function(e) { setSelectClass($(this)); });
    });
  }

  function enableOrDisableSubmit() {
    if ($('.signup-form #conditions_accepted').is(':checked')) $('.signup-form [type=submit]').attr('disabled', null);
    else $('.signup-form [type=submit]').attr('disabled', 'disabled');
  }

  // Sets the submit button's disabled state so that it corresponds to the conditions accepted checkbox and keeps it in sync.
  function initAcceptCheckboxHandler() {
    $('.signup-form #conditions_accepted').change(enableOrDisableSubmit);
    enableOrDisableSubmit();
  }


  $(document).ready(initCORSSignupFormHandler);
  $(document).ready(initMediumTypeFromAnchor);
  $(document).ready(initPlaceholderForSelectElement);
  $(document).ready(initAcceptCheckboxHandler);

})();
